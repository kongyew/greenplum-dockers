---

- name: run the playbook tasks on the localhost
  hosts: 127.0.0.1
  vars:
    TESTVAR: 5
  connection: local
#  become: yes
 # These variables are needed to bootstrap Ansible
  vars:
    ansible_sudo_password: '{{ lookup("env", "SUDO_PASSWORD") }}'
    # etc.

  # Use 'set_fact' not 'vars' for the rest of the variables to ensure they are are evaluated immediately, to avoid getting this warning later:
  # "[WARNING]: when statements should not include jinja2 templating delimiters" (see https://github.com/ansible/ansible/issues/22397)
  pre_tasks:
    - name: Loading environment variables
      tags: always
      set_fact:
        # I write the variables in uppercase so they match the .env file - but you don't have to
        # GPDB_HOME booleans I use the strings "true" and "false", and convert them to booleans at this point
        GPDB_HOME: '{{ lookup("env", "GPDB_HOME") }}'
        MASTER_DATA_DIRECTORY: '{{ lookup("env", "MASTER_DATA_DIRECTORY") }}'
        MASTER_DATA_TEST: '{{ lookup("env", "MASTER_DATA_DIRECTORY") == "true" }}'
        # etc.
  tasks:

  - name: print out the hostname of target
    command: hostname

  - name: Ansible check file exists example.
    stat:
       path: /usr/local/greenplum-db
    register: greenplum-db_details

  - name: /usr/local/greenplum-db/pxf/bin/pxf init
    command: /usr/local/greenplum-db/pxf/bin/pxf init
    environment:
      JAVA_HOME: /usr/lib/jvm/jre-openjdk/
    register: pxf_init_output
    become: yes
    become_user: gpadmin
  - debug: msg="{{ pxf_init_output.stdout_lines }}"

  - name: /usr/local/greenplum-db/pxf/bin/pxf stop
    command: /usr/local/greenplum-db/pxf/bin/pxf stop
    environment:
      JAVA_HOME: /usr/lib/jvm/jre-openjdk/
    register: pxf_stop_output
    become: yes
    become_user: gpadmin
  - debug: msg="{{ pxf_stop_output.stdout_lines }}"

  # - name: "Get process PID"
  #   shell: >
  #     echo -n
  #     $(ps -aux | grep pxf)
  #   args:
  #     executable: "{{ shell_path }}"
  #   register: my_procs
  #
  # - debug:
  #     var: pxf_init_output

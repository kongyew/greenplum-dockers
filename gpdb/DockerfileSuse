#
#  Dockerfile for a GPDB Image
#
FROM opensuse:42.3


# Argument
ARG build_env=test
ARG GPDB_VERSION="5.5.0-sles11-x86_64"
ARG GPDB_DOWNLOAD="greenplum-downloader/DOWNLOAD_5.5.0"

# Passing argument to this env variable inside your Dockerfile:
ENV ENV_GPDB_VERSION=$GPDB_VERSION

################################################################################

COPY ${GPDB_DOWNLOAD}/greenplum-db-${GPDB_VERSION}.zip /tmp
COPY ${GPDB_DOWNLOAD}/pljava-*gp5-rhel6-x86_64.gppkg /tmp
#COPY ${GPDB_DOWNLOAD}/pljava-1.4.2-gp5-rhel6-x86_64.gppkg /tmp



COPY ${GPDB_DOWNLOAD}/madlib-*.tar.gz /tmp/
COPY ${GPDB_DOWNLOAD}/greenplum*web*.zip /tmp

COPY configs /opt/configs/
COPY PXF    /opt/PXF/
COPY madlib    /opt/madlib/
COPY dblink    /opt/dblink/
COPY pl_java    /opt/pl_java/
COPY gphdfs    /opt/gphdfs/

# Default RPM
#RUN cd tmp && curl https://raw.githubusercontent.com/yast/yast-yast2/master/scripts/yast2 && cp yast2 /sbin && chmod +x /sbin/yast2
RUN zypper -n -v refresh \
 && zypper -n update
RUN echo root:pivotalsuse2018 | chpasswd \
    && zypper -n install  vim wget unzip which tar less iproute \
    && zypper -n install   openssh ed m4 sudo \
    && zypper -n install  krb5 krb5-client \
    && zypper -n install  cronie cronie-anacron  net-tools glibc-locale


RUN unzip  /tmp/greenplum-db-${GPDB_VERSION}.zip -d /tmp/ \
    && rm /tmp/greenplum-db-${GPDB_VERSION}.zip \
    && sed -i s/"more << EOF"/"cat << EOF"/g /tmp/greenplum-db-${GPDB_VERSION}.bin \
    && echo -e "yes\n\nyes\nyes\n" | /tmp/greenplum-db-${GPDB_VERSION}.bin \
    && ln -s /usr/local/greenplum-db /usr/local/greenplum-db-devel \
    && cat /opt/configs/sysctl.conf.add >> /etc/sysctl.conf \
    && cat /opt/configs/limits.conf.add >> /etc/security/limits.conf

################################################################################
#
################################################################################
#RUN mkdir -p /tmp/gpdb && tar -zxvf /tmp/greenplum-db-${GPDB_VERSION}.tar.gz -C /tmp/gpdb \
#    && rm /tmp/greenplum-db-${GPDB_VERSION}.tar.gz \
#    && mv /tmp/gpdb/ /usr/local/greenplum-db/ \
#    && ln -s /usr/local/greenplum-db /usr/local/greenplum-db-devel \
#    && cat /opt/configs/sysctl.conf.add >> /etc/sysctl.conf \
#    && cat /opt/configs/limits.conf.add >> /etc/security/limits.conf

RUN     cp /opt/configs/*.sh /usr/local/bin/ \
        && chmod +x /usr/local/bin/*.sh \
        && chmod +x /opt/PXF/*.sh \
        && cp /opt/PXF/*.sh /usr/local/bin \
        && chmod +x /opt/madlib/*.sh \
        && cp /opt/madlib/*.sh /usr/local/bin \
        && chmod +x /opt/pl_java/*.sh \
        && cp /opt/pl_java/*.sh /usr/local/bin

###############################################################################
RUN     /usr/sbin/groupadd gpadmin \
        && /usr/sbin/useradd -m -d /home/gpadmin -g gpadmin -G wheel gpadmin \
        && echo "gpadmin:pivotal"| chpasswd \
        && echo "gpadmin        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers

RUN     ls -al /opt/configs/bash_profile \
        && cp /opt/configs/bash_profile /home/gpadmin/.bash_profile \
        && cp /opt/configs/bashrc_template /home/gpadmin/.bashrc \
        && chown -R gpadmin: /home/gpadmin \
        && mkdir -p /gpdata/master /gpdata/segments \
        && chown -R gpadmin: /gpdata \
        && chown -R gpadmin: /usr/local/green* \
        && chown -R gpadmin:gpadmin /usr/local/greenplum-db-devel

EXPOSE 22

# Set the locale
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# Create the ssh host keys needed for sshd
RUN ssh-keygen -A

# Fix sshd's configuration for use within the container. See VW-10576 for details.
RUN sed -i -e 's/^UsePAM .*/UsePAM no/' /etc/ssh/sshd_config
RUN sed -i -e 's/^PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config


RUN /usr/sbin/sshd -D &

##############################################################################
#       root user
RUN   ssh-keygen -f /root/.ssh/id_rsa -N '' && \
      cat /root/.ssh/id_rsa.pub > /root/.ssh/authorized_keys \
      && mkdir -p /home/gpadmin/.ssh  \
      && cat /root/.ssh/id_rsa.pub >> /home/gpadmin/.ssh/authorized_keys \
      && cp /root/.ssh/id_rsa /root/.ssh/id_rsa.pub /home/gpadmin/.ssh/  \
      && chown gpadmin:gpadmin -R /home/gpadmin/.ssh \
      && echo "gpdbsne" > /tmp/gpdb-hosts \
      && cp /opt/configs/gpinitsystem_singlenode /tmp \
      && chmod 777 /tmp/gpinitsystem_singlenode \
      && cat /etc/HOSTNAME > ~/orig_hostname \
      && cat /etc/HOSTNAME > /tmp/orig_hostname \
      && echo "127.0.0.1 gpdbsne gpdbsne.localdomain" >> /etc/hosts \
      && su -c gpadmin -c "echo 'source /usr/local/greenplum-db/greenplum_path.sh' >> .bashrc" \
      && su -c gpadmin -c "echo 'export MASTER_DATA_DIRECTORY=/gpdata/master/gpseg-1' >> .bashrc"


################################################################################

EXPOSE 5432 22
EXPOSE 40000 40001 40002

VOLUME /data
# Set the default command to run when starting the container

RUN cd /usr/local/bin \
    && wget https://raw.githubusercontent.com/ikysil/run-parts/master/run-parts \
    && chmod +x /usr/local/bin/run-parts


################################################################################
# Default entry point
# Files under /docker-entrypoint.d/ will be executed
################################################################################

COPY configs/docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

COPY docker-entrypoint.d/* /docker-entrypoint.d/
RUN chmod +x /docker-entrypoint.d/*.sh

ONBUILD COPY /docker-entrypoint.d/* /docker-entrypoint.d/
# Run all the scripts
ENTRYPOINT ["/docker-entrypoint.sh"]


# Default command
CMD ["bin/bash"]
